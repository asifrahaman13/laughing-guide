services:
  qdrant:
    image: qdrant/qdrant
    ports:
      - "6333:6333"
      - "6334:6334"
    networks:
      - laughing-network
    volumes:
      - qdrant_storage:/qdrant/storage

  postgres:
    image: postgres:latest
    ports:
      - "5433:5432"
    networks:
      - laughing-network
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:latest
    ports:
      - "6380:6379"
    networks:
      - laughing-network
    volumes:
      - redis_data:/data

  ai:
    build:
      context: ./ai
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    networks:
      - laughing-network
    volumes:
      - ./ai:/app
    command: uv run uvicorn src.main:app --host 0.0.0.0 --port 8080
    tty: true
    depends_on:
      - postgres
      - redis

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    networks:
      - laughing-network
    env_file:
      - .env
    volumes:
      - .:/app
    tty: true
    depends_on:
      - postgres
      - ai
      - redis

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    networks:
      - laughing-network
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
    command: bun run dev
    tty: true

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - laughing-network

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"
    networks:
      - laughing-network

networks:
  laughing-network:
    driver: bridge

volumes:
  qdrant_storage:
  postgres_data:
  redis_data:
